<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8"/>
  <meta name="viewport" content="width=device-width,initial-scale=1"/>
  <title>Verificación · <%= org.name %></title>
  <link rel="stylesheet" href="<%= cdn %>/styles.css"/>
  <style>
    .verify-wrap{min-height:100vh;display:flex;align-items:center;justify-content:center;padding:24px}
    .verify-card{max-width:540px;width:100%;background:#0f1417;border:1px solid var(--border);border-radius:20px;padding:28px}
    .v-icon{width:64px;height:64px;border-radius:999px;background:#f2f3f4;display:flex;align-items:center;justify-content:center;margin:0 auto 14px}
    .v-icon svg{width:28px;height:28px;color:#111}
    .v-title{font-size:1.8rem;line-height:1.2;text-align:center;margin:8px 0 4px}
    .v-sub{color:#6b7f85;text-align:center;margin-bottom:18px}
    .otp-grid{display:flex;gap:10px;justify-content:center;margin:10px 0 8px}
    .otp-grid input{width:52px;height:64px;border-radius:12px;border:1px solid var(--border);background:#0b0f12;color:var(--text);text-align:center;font-size:28px;font-weight:700}
    .otp-grid input:focus{outline:2px solid var(--acc);border-color:var(--acc)}
    .v-actions{display:flex;justify-content:center;gap:10px;margin-top:12px;flex-wrap:wrap}
    .v-muted{color:#6b7f85;font-size:14px;text-align:center;margin-top:8px}
    .v-error{color:#f87171;text-align:center;margin-top:10px}
    .btn-wide{min-width:200px}
    .v-alt{margin-top:16px;text-align:center}
    .v-small{font-size:13px;color:#8aa2a8}
    @media (max-width:420px){ .otp-grid input{width:46px;height:58px;font-size:24px} }
  </style>
</head>
<body>
  <main class="verify-wrap">
    <div class="verify-card" role="dialog" aria-labelledby="title">
      <div class="v-icon" aria-hidden="true">
        <% if (channel === 'email') { %>
          <svg viewBox="0 0 24 24" fill="none"><path d="M4 6h16v12H4z" stroke="currentColor" stroke-width="1.6"/><path d="m4 7 8 6 8-6" stroke="currentColor" stroke-width="1.6"/></svg>
        <% } else { %>
          <svg viewBox="0 0 24 24" fill="none"><path d="M7 2h10a2 2 0 0 1 2 2v16l-5-3H7a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2Z" stroke="currentColor" stroke-width="1.6"/></svg>
        <% } %>
      </div>

      <h1 id="title" class="v-title">
        <% if (channel === 'email') { %>
          Te hemos enviado un correo<br/>electrónico
        <% } else { %>
          Te hemos enviado un mensaje<br/>de texto
        <% } %>
      </h1>

      <p class="v-sub">
        Introduce el código de <%= OTP_LENGTH %> dígitos que hemos enviado a
        <strong><%= identityMasked %></strong>.
      </p>

      <form id="otpForm" autocomplete="one-time-code" class="center">
        <div class="otp-grid" id="otpGrid">
          <% for (let i=0;i<OTP_LENGTH;i++){ %>
            <input inputmode="numeric" pattern="[0-9]*" maxlength="1" aria-label="Dígito <%= i+1 %>" />
          <% } %>
        </div>
        <div class="v-actions">
          <button class="btn primary btn-wide" id="verifyBtn" type="submit">Verificar</button>
        </div>
        <div class="v-muted">
          <span id="timer">15:00</span>
        </div>
        <div class="v-error" id="errorBox" role="alert" style="display:none"></div>
      </form>

      <div class="v-actions">
        <button class="btn" id="resendBtn" type="button">Reenviar código</button>
        <% if (channel === 'whatsapp') { %>
          <a class="btn ghost" href="/verify?channel=email&identity=<%= encodeURIComponent(identityRaw) %>">Enviar código al correo</a>
        <% } else { %>
          <a class="btn ghost" href="/verify?channel=whatsapp&identity=<%= encodeURIComponent(identityRaw) %>">Enviar por WhatsApp</a>
        <% } %>
      </div>

      <div class="v-alt v-small">
        ¿Problemas con WhatsApp? <a href="/whatsapp/qr" target="_blank">Escanea el QR</a> o abre <a href="/qr.png" target="_blank">/qr.png</a>.
      </div>
    </div>
  </main>

  <script>
    const OTP_LENGTH = <%= OTP_LENGTH %>;
    const channel = '<%= channel %>';
    const identity = '<%= identityRaw %>';
    const errorBox = document.getElementById('errorBox');
    const verifyBtn = document.getElementById('verifyBtn');
    const resendBtn = document.getElementById('resendBtn');
    const timerEl = document.getElementById('timer');
    const inputs = Array.from(document.querySelectorAll('#otpGrid input'));
    inputs[0].focus();

    inputs.forEach((inp, idx)=>{
      inp.addEventListener('input', (e)=>{
        e.target.value = e.target.value.replace(/\D/g,'').slice(0,1);
        if (e.target.value && idx < inputs.length-1) inputs[idx+1].focus();
        hideError();
      });
      inp.addEventListener('keydown', (e)=>{
        if (e.key === 'Backspace' && !inp.value && idx>0) inputs[idx-1].focus();
      });
      inp.addEventListener('paste', (e)=>{
        const data = (e.clipboardData || window.clipboardData).getData('text').replace(/\D/g,'').slice(0, OTP_LENGTH);
        if (!data) return;
        e.preventDefault();
        inputs.forEach((n,i)=> n.value = data[i] || '');
        const last = Math.min(data.length, OTP_LENGTH)-1;
        if (last>=0) inputs[last].focus();
      });
    });

    let remaining = 15*60;
    setInterval(()=>{
      remaining = Math.max(0, remaining-1);
      const m = String(Math.floor(remaining/60)).padStart(2,'0');
      const s = String(remaining%60).padStart(2,'0');
      timerEl.textContent = m+':'+s;
    }, 1000);

    document.getElementById('otpForm').addEventListener('submit', async (e)=>{
      e.preventDefault();
      const code = inputs.map(i=>i.value).join('');
      if (code.length !== OTP_LENGTH) return showError('Código incompleto');

      verifyBtn.disabled = true;
      try{
        const body = { code };
        if (channel === 'email') body.email = identity;
        else body.phone = identity;

        const r = await fetch('/auth/verify', { method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });
        const j = await r.json();
        if (!j.ok) throw new Error(j.error || 'No se pudo verificar');

        localStorage.setItem('agendador_session_identity', identity);
        location.href = '/';
      }catch(err){
        showError(err.message || 'Error de verificación');
      }finally{
        verifyBtn.disabled = false;
      }
    });

    resendBtn.addEventListener('click', async ()=>{
      try{
        const body = { name:'Cliente', channel };
        if (channel === 'email') body.email = identity; else body.phone = identity;
        const r = await fetch('/auth/send-code',{ method:'POST', headers:{'Content-Type':'application/json'}, body: JSON.stringify(body) });
        const j = await r.json();
        if(!j.ok) throw new Error(j.error || 'No se pudo reenviar');
        hideError(); alert('Código reenviado ✅'); remaining = 15*60;
      }catch(err){ showError(err.message || 'No se pudo reenviar'); }
    });

    function showError(msg){ errorBox.textContent = '❌ ' + msg; errorBox.style.display = ''; }
    function hideError(){ errorBox.style.display = 'none'; errorBox.textContent = ''; }
  </script>
</body>
</html>
